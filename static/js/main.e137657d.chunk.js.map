{"version":3,"sources":["Table.js","Chart.js","App.js","calculations.js","index.js"],"names":["Table","_ref","payments","className","output","filter","year","i","balance","interestYearly","reduce","acc","index","interestTotal","overpaymentTotal","overpayment","rows","concat","Object","toConsumableArray","partial","Math","round","react_default","a","createElement","map","row","key","d","toLocaleString","colSpan","margin","width","height","x","scaleLinear","range","y","actual","line","baseline","Chart","chart","useRef","useEffect","chartEl","select","current","domain","length","call","axisBottom","ticks","min","axisLeft","transition","attr","ref","viewBox","transform","defaultOverpayment","month","amount","src_App","_React$useState","React","useState","_React$useState2","slicedToArray","openAmountTip","setOpenAmountTip","_React$useState3","_React$useState4","openYearsTip","setOpenYearsTip","_React$useState5","_React$useState6","openRateTip","setOpenRateTip","_React$useState7","_React$useState8","openMonthlyTip","setOpenMonthlyTip","_React$useState9","_React$useState10","openSinglePayTip","setOpenSinglePayTip","_useState","_useState2","initial","setInitial","_useState3","_useState4","rate","setRate","_useState5","_useState6","years","setYears","_useState7","_useState8","monthlyOverpayment","setMonthlyOverpayment","_useState9","_useState10","overpayments","setOverpayments","updateOverpayment","target","objectSpread","defineProperty","name","value","_calculate","arguments","undefined","monthlyRatePct","monthlyPayment","pow","_loop","overpaymentYearly","_loop2","val","interestMonth","push","calculate","_useState11","checked","_useState12","state","setState","_useState13","_useState14","inputFieldNumber","setInputFieldNumber","_useState15","_useState16","speakNumber","setSpeakNumber","speak","useSpeechSynthesis","_useState17","_useState18","valueListen","setValueListen","_useSpeechRecognition","useSpeechRecognition","onResult","result","isNaN","replace","onEnd","setTimeout","listen","listening","stop","text","toFixed","parseFloat","_useState19","_useState20","instruction","setInstruction","onDoubleClick","onClick","style","fontFamily","fontSize","Switch","onChange","event","color","Tooltip","title","AttachMoney_default","type","maxLength","e","abs","ClickAwayListener","onClickAway","PopperProps","disablePortal","onClose","open","disableFocusListener","disableHoverListener","disableTouchListener","Help_default","step","_ref2","max","parseInt","IconButton","variant","Add_default","_","j","Delete_default","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e137657d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default ({ payments, className }) => {\r\n  let output = payments\r\n    .filter((year, i) => i > 0 && (year.balance > 0 || year.interestYearly > 0))\r\n    .reduce(\r\n      (acc, year, index) => ({\r\n        interestTotal: acc.interestTotal + year.interestYearly,\r\n        overpaymentTotal: acc.overpaymentTotal + year.overpayment,\r\n        rows: [\r\n          ...acc.rows,\r\n          [\r\n            year.partial ? year.partial + 'm' : index + 1,\r\n            Math.round(year.interestYearly || 0),\r\n            Math.round(year.overpayment),\r\n            Math.round(year.balance)\r\n          ]\r\n        ]\r\n      }),\r\n      { interestTotal: 0, overpaymentTotal: 0, rows: [] }\r\n    );\r\n\r\n  return (\r\n    \r\n    <div className=\"panel panel-primary\">\r\n      <div className=\"panel-heading\"><h3>Cashflow Graph</h3></div>\r\n      <div className=\"panel-body\">\r\n      <table className={className}>\r\n      <thead>\r\n        <tr>\r\n          <th>Years</th>\r\n          <th>Interest</th>\r\n          <th>Overpayment</th>\r\n          <th>Balance</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {output.rows.map((row, index) => (\r\n          <tr key={index}>\r\n            {row.map((d, i) => (\r\n              <td key={i}>{d.toLocaleString()}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td colSpan={2}>\r\n            {Math.round(output.interestTotal).toLocaleString()}\r\n          </td>\r\n          <td>{Math.round(output.overpaymentTotal).toLocaleString()}</td>\r\n          <td />\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n    \r\n      </div>\r\n    </div>  \r\n  );\r\n};\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { select } from 'd3-selection';\r\nimport { line } from 'd3-shape';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { axisBottom, axisLeft } from 'd3-axis';\r\nimport 'd3-transition';\r\n\r\nconst margin = { top: 20, right: 20, bottom: 20, left: 80 },\r\n  fullWidth = 800,\r\n  fullHeight = 300,\r\n  width = fullWidth - margin.left - margin.right,\r\n  height = fullHeight - margin.top - margin.bottom;\r\n\r\nconst x = scaleLinear().range([0, width]);\r\n\r\nconst y = scaleLinear().range([0, height]);\r\n\r\nconst actual = line()\r\n  .x((d, i) => x(i + (d.partial / 12 || 1) - 1))\r\n  .y(d => y(d.balance));\r\n\r\nconst baseline = line()\r\n  .x((d, i) => x(i))\r\n  .y(d => y(d.baseline));\r\n\r\nexport default ({ payments }) => {\r\n  const chart = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const chartEl = select(chart.current);\r\n    x.domain([0, payments.length - 1]);\r\n    y.domain([payments[0].balance, 0]);\r\n\r\n    chartEl\r\n      .select('.x')\r\n      .call(axisBottom(x).ticks(Math.min(payments.length, 30)));\r\n\r\n    chartEl.select('.y').call(axisLeft(y));\r\n\r\n    chartEl\r\n      .select('.baseline')\r\n      .transition()\r\n      .attr('d', baseline(payments));\r\n\r\n    chartEl\r\n      .select('.actual')\r\n      .transition()\r\n      .attr('d', actual(payments));\r\n  }, [payments]);\r\n\r\n  return (\r\n    <svg\r\n      ref={chart}\r\n      height=\"100%\"\r\n      width=\"100%\"\r\n      viewBox={`0 0 ${fullWidth} ${fullHeight}`}\r\n    >\r\n      <g transform={`translate(${margin.left},${margin.top})`}>\r\n        <g className=\"axis x\" transform={`translate(0, ${height})`} />\r\n        <g className=\"axis y\" />\r\n        <path className=\"line baseline\" />\r\n        <path className=\"line actual\" />\r\n      </g>\r\n      \r\n\r\n    </svg>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport { useSpeechSynthesis } from 'react-speech-kit';\r\nimport { useSpeechRecognition } from 'react-speech-kit';\r\n\r\nimport './App.css';\r\n\r\nimport Table from './Table';\r\nimport Chart from './Chart';\r\nimport calculate from './calculations';\r\n\r\nconst defaultOverpayment = {month: '1', year: '0', amount: '0'};\r\n\r\nexport default () => {\r\n    const [openAmountTip, setOpenAmountTip] = React.useState(false);\r\n    const [openYearsTip, setOpenYearsTip] = React.useState(false);\r\n    const [openRateTip, setOpenRateTip] = React.useState(false);\r\n    const [openMonthlyTip, setOpenMonthlyTip] = React.useState(false);\r\n    const [openSinglePayTip, setOpenSinglePayTip] = React.useState(false);\r\n\r\n    const [initial, setInitial] = useState('200000');\r\n    const [rate, setRate] = useState('5');\r\n    const [years, setYears] = useState('25');\r\n    const [monthlyOverpayment, setMonthlyOverpayment] = useState('0');\r\n    const [overpayments, setOverpayments] = useState([defaultOverpayment]);\r\n\r\n    const updateOverpayment = index => ({target}) =>\r\n        setOverpayments(\r\n            overpayments.map((overpayment, i) =>\r\n                i === index\r\n                    ? {...overpayment, [target.name]: target.value}\r\n                    : overpayment\r\n            )\r\n        );\r\n\r\n    const {monthlyPayment, payments} = calculate(\r\n        +initial,\r\n        +years,\r\n        +rate,\r\n        +monthlyOverpayment,\r\n        overpayments\r\n    );\r\n\r\n    // switch state\r\n    const [state, setState] = useState({\r\n        checked: false\r\n      }); \r\n      \r\n    const [inputFieldNumber, setInputFieldNumber] = useState('0');\r\n    const [speakNumber, setSpeakNumber] = useState(0);\r\n\r\n    //speech synthesis\r\n    const { speak } = useSpeechSynthesis();\r\n\r\n    // speech recognition\r\n    const [valueListen, setValueListen] = useState('');\r\n    const { listen, listening, stop } = useSpeechRecognition({\r\n        onResult: (result) => {\r\n            if (!isNaN(result.replace(/,/g, '')) ) {\r\n                setValueListen(result);\r\n            }   \r\n        },\r\n\r\n        onEnd: () => {\r\n            setTimeout(() => {\r\n                setSpeakNumber(speakNumber + 1);\r\n            }, 1000)           \r\n        }\r\n    });\r\n\r\n    // on updating checked state\r\n    useEffect(() => {\r\n        if (state.checked) {\r\n            setSpeakNumber(speakNumber + 1); \r\n        }\r\n        if (!state.checked) {\r\n            setSpeakNumber(0); \r\n            setInputFieldNumber('0');\r\n            setValueListen('');\r\n        }\r\n    }, [state]);\r\n\r\n    // on updating speak number, speak\r\n    useEffect( () => {\r\n        if (speakNumber === 1) {\r\n            speak( {text:\"Please state your initial amount\"} );\r\n            setInputFieldNumber('1'); \r\n        } else if (speakNumber === 2) {\r\n            speak( {text:\"Please state the mortgage term\"} );\r\n            setInputFieldNumber('2');\r\n        } else if (speakNumber === 3) {\r\n            speak( {text:\"Please state the interest rate\"} );\r\n            setInputFieldNumber('3');\r\n        } else if (speakNumber === 4) {\r\n            speak( {text:\"Please state the regular monthly overpayment, if any\"} );\r\n            setInputFieldNumber('4');\r\n        } else if (speakNumber === 5) {\r\n            speak( {text:\"Your monthly payment is \" + (+monthlyOverpayment + monthlyPayment).toFixed(2)} );\r\n            setState({ ...state, checked: false }); \r\n        }\r\n    }, [speakNumber]);\r\n\r\n    // on updating input field number, start listening and stop in 10 secs\r\n    useEffect( () => {\r\n        if (inputFieldNumber !== '0') {\r\n            listen();\r\n            setTimeout(() => {\r\n                stop(); \r\n            }, 10000)\r\n        }\r\n    }, [inputFieldNumber]);\r\n\r\n    // on updating listen value, set input fields\r\n    useEffect( () => {\r\n        if (inputFieldNumber === '1') {\r\n            setInitial(parseFloat(valueListen.replace(/,/g, ''))); \r\n        } else if (inputFieldNumber === '2') {\r\n            setYears(parseFloat(valueListen.replace(/,/g, ''))); \r\n        } else if (inputFieldNumber === '3') {\r\n            setRate(parseFloat(valueListen.replace(/,/g, ''))); \r\n        } else if (inputFieldNumber === '4') {\r\n            setMonthlyOverpayment(parseFloat(valueListen.replace(/,/g, ''))); \r\n        } \r\n    }, [valueListen]);\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n    const handleChangeDoubleClick = () => {\r\n        setState({ ...state, checked: true });\r\n    };\r\n\r\n    const [instruction, setInstruction] = useState(false);\r\n\r\n    const speakInstruction = () => {\r\n        if (!instruction) {\r\n            speak( {text:\"You may double click anywhere on the screen to activate voice mode\"} );\r\n            setInstruction(true);\r\n        }\r\n    };\r\n\r\n    // useEffect( () => {\r\n    //     speak( {text:\"You may double click anywhere on the screen to activate voice mode\"} );\r\n    // }, []);\r\n\r\n    return (\r\n        <div onDoubleClick={handleChangeDoubleClick} onClick={speakInstruction}>\r\n            <nav className=\"navbar navbar-default\">\r\n                <div className=\"navbar-header\">\r\n                    <div className=\"navbar-brand\" style={{fontFamily: 'Arial', fontSize: 25}}>\r\n                        Mortgage Overpayment Calculator\r\n                    </div>                        \r\n                </div>\r\n                <div className=\"navbar-right\">\r\n                        <Switch\r\n                            checked={state.checked}\r\n                            onChange={handleChange}\r\n                            name=\"checked\"\r\n                        />\r\n                        <label style={{color: 'white'}}>Voice</label>\r\n                        {listening && <div style={{color: 'white'}}>I'm listening...</div>}\r\n                </div>               \r\n            </nav>\r\n            <div className=\"container-fluid component\">\r\n                <div className=\"col-sm-9 col-md-9 col-lg-9\">\r\n                    <div className=\"col-sm-6 col-md-6 col-lg-6 component\">\r\n                            <div className=\"panel panel-primary\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h3>Initial</h3>\r\n                                </div>    \r\n                                <div className=\"panel-body\">\r\n                                    <Tooltip title={<h6>Mortgage debt</h6>}>\r\n                                        <label>\r\n                                            <AttachMoneyIcon className= {'material-icons'} />\r\n                                            Amount\r\n                                        </label>\r\n                                    </Tooltip>\r\n                                    <input\r\n                                    type=\"number\"\r\n                                    maxLength={7}\r\n                                    value={initial}\r\n                                    onChange={e => {\r\n                                        e.target.value = !!e.target.value && Math.abs(e.target.value) >= 0 ? Math.abs(e.target.value) : null;\r\n                                        setInitial(e.target.value)\r\n                                    }}\r\n                                /> \r\n                                <ClickAwayListener onClickAway={() => setOpenAmountTip(false)}>                             \r\n                                    <Tooltip\r\n                                        PopperProps={{\r\n                                        disablePortal: true,\r\n                                        }}\r\n                                        onClose={() => setOpenAmountTip(false)}\r\n                                        open={openAmountTip}\r\n                                        disableFocusListener\r\n                                        disableHoverListener\r\n                                        disableTouchListener\r\n                                        title={<h6>This is the total amount you owe</h6>}>\r\n                                        <HelpIcon className= {'help-icon'} onClick={() => setOpenAmountTip(true)}/>\r\n                                    </Tooltip>                      \r\n                                </ClickAwayListener>   \r\n                                </div>\r\n                                <div className=\"panel-body\">\r\n                                    <Tooltip title={<h6>Mortgage term</h6>}>\r\n                                        <label>\r\n\r\n                                            {/* <EventIcon className= {'material-icons'} /> */}\r\n                                            &nbsp;&nbsp;&nbsp;&nbsp;Years\r\n\r\n                                        </label>\r\n                                    </Tooltip>\r\n                                        \r\n                                    <input\r\n                                    //style={{width: \"80px\"}}\r\n                                    //placeholder=\"Required\"\r\n                                    type=\"number\"\r\n                                    maxLength={2}\r\n                                    value={years}\r\n                                    onChange={e => {\r\n                                        e.target.value = !!e.target.value && Math.abs(e.target.value) >= 0 ? Math.abs(e.target.value) : null;\r\n                                        setYears(e.target.value)\r\n                                    }}\r\n                                    />\r\n                                    <ClickAwayListener onClickAway={() => setOpenYearsTip(false)}>                             \r\n                                        <Tooltip\r\n                                            PopperProps={{\r\n                                            disablePortal: true,\r\n                                            }}\r\n                                            onClose={() => setOpenYearsTip(false)}\r\n                                            open={openYearsTip}\r\n                                            disableFocusListener\r\n                                            disableHoverListener\r\n                                            disableTouchListener\r\n                                            title={<h6>This is the number of years over which you are repaying your mortgage</h6>}>\r\n                                            <HelpIcon className= {'help-icon'} onClick={() => setOpenYearsTip(true)}/>\r\n                                        </Tooltip>                      \r\n                                    </ClickAwayListener>\r\n                                </div>\r\n                                <div className=\"panel-body\" >\r\n\r\n                                    <Tooltip title={<h6>Interest rate</h6>}>\r\n                                        <label> <span className='percentage'>% </span>Rate</label>\r\n                                    </Tooltip>\r\n\r\n                                    <input\r\n                                        //style={{width: \"80px\"}}\r\n                                        //placeholder=\"Required\"\r\n                                        type=\"number\"\r\n                                        step={0.1}\r\n                                        value={rate}\r\n                                        onChange={e => {\r\n                                            e.target.value = !!e.target.value && Math.abs(e.target.value) >= 0 ? Math.abs(e.target.value) : null;\r\n                                            setRate(e.target.value)\r\n                                        }}\r\n                                    />\r\n                                    <ClickAwayListener onClickAway={() => setOpenRateTip(false)}>                             \r\n                                        <Tooltip\r\n                                            PopperProps={{\r\n                                            disablePortal: true,\r\n                                            }}\r\n                                            onClose={() => setOpenRateTip(false)}\r\n                                            open={openRateTip}\r\n                                            disableFocusListener\r\n                                            disableHoverListener\r\n                                            disableTouchListener\r\n                                            title={<h6>This is the annual mortgage interest rate</h6>}>\r\n                                            <HelpIcon className= {'help-icon'} onClick={() => setOpenRateTip(true)}/>\r\n                                        </Tooltip>                      \r\n                                    </ClickAwayListener>\r\n                                </div>\r\n\r\n                            </div>                              \r\n                        \r\n                    </div>\r\n                    <div className=\"col-sm-6 col-md-6 col-lg-6 component\">\r\n                    <div className=\"panel panel-primary\">\r\n                                <div className=\"panel-heading\" >\r\n                            <h3>Overpayment</h3>\r\n                                 </div>\r\n                                <div className=\"panel-body\"><Tooltip title={<h6>Regular monthly overpayment</h6>}>\r\n                                    <label>Monthly</label>\r\n                                </Tooltip>                           \r\n                                <input\r\n                                    type=\"number\"\r\n                                    maxLength={5}\r\n                                    value={monthlyOverpayment}\r\n                                    onChange={e => {\r\n                                        e.target.value = !!e.target.value && Math.abs(e.target.value) >= 0 ? Math.abs(e.target.value) : null;\r\n                                        setMonthlyOverpayment(e.target.value)\r\n                                    }}\r\n                                />\r\n                                <ClickAwayListener onClickAway={() => setOpenMonthlyTip(false)}>                             \r\n                                <Tooltip\r\n                                    PopperProps={{\r\n                                    disablePortal: true,\r\n                                    }}\r\n                                    onClose={() => setOpenMonthlyTip(false)}\r\n                                    open={openMonthlyTip}\r\n                                    disableFocusListener\r\n                                    disableHoverListener\r\n                                    disableTouchListener\r\n                                    title={<h6>This is the regular monthly overpayment made on top of your normal monthly payment</h6>}>\r\n                                    <HelpIcon className= {'help-icon'} onClick={() => setOpenMonthlyTip(true)}/>\r\n                                </Tooltip>                      \r\n                            </ClickAwayListener>\r\n                           </div>\r\n                            <div className=\"panel-body\">\r\n                        <label>Year</label>\r\n                        <label>Month</label>\r\n                        <Tooltip title={<h6>Lump sum overpayment</h6>}>                                                  \r\n                            <label>\r\n                                <AttachMoneyIcon className= {'material-icons'} />\r\n                                Amount\r\n                            </label>\r\n                        </Tooltip>\r\n                            <ClickAwayListener onClickAway={() => setOpenSinglePayTip(false)}>                             \r\n                                <Tooltip\r\n                                    PopperProps={{\r\n                                    disablePortal: true,\r\n                                    }}\r\n                                    onClose={() => setOpenSinglePayTip(false)}\r\n                                    open={openSinglePayTip}\r\n                                    disableFocusListener\r\n                                    disableHoverListener\r\n                                    disableTouchListener\r\n                                    title={<h6>This is the one-off lump sum overpayment (single payment done only once) made during the specified year and month</h6>}>\r\n                                    <HelpIcon className= {'material-icons'} onClick={() => setOpenSinglePayTip(true)}/>\r\n                                </Tooltip>                      \r\n                            </ClickAwayListener>\r\n                        {overpayments.map(({year, month, amount}, i) => (\r\n                            <div key={i}>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"0\"\r\n                                    max={years}\r\n                                    value={!!year && Math.abs(year) >= 0 ? Math.abs(parseInt(year)) : null}\r\n                                    name=\"year\"\r\n                                    onChange={updateOverpayment(i)}\r\n                                />\r\n                                <input\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    max=\"12\"\r\n                                    value={!!month && Math.abs(month) >= 0 ? Math.max(1, Math.min(12, Math.abs(parseInt(month)))) : null}\r\n                                    name=\"month\"\r\n                                    onChange={updateOverpayment(i)}\r\n                                />\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={!!amount && Math.abs(amount) >= 0 ? Math.abs(amount) : null}\r\n                                    name=\"amount\"\r\n                                    onChange={updateOverpayment(i)}\r\n                                />\r\n\r\n                                {i === overpayments.length - 1 ? (\r\n                                    <IconButton  color=\"secondary\" variant=\"outlined\"\r\n                                                 onClick={() =>\r\n                                                     setOverpayments([...overpayments, defaultOverpayment])\r\n                                                 }>\r\n                                        <AddIcon />\r\n                                    </IconButton>\r\n                                ) : (\r\n                                    <IconButton  color=\"secondary\" variant=\"outlined\"\r\n                                                 onClick={() =>\r\n                                                     setOverpayments(overpayments.filter((_, j) => j !== i))\r\n                                                 }>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                            </div>\r\n                            </div>\r\n\r\n                    \r\n                    </div>                             \r\n                    <div className=\"col-sm-12 col-md-12 col-lg-12 component\">\r\n                        <div className=\"panel panel-primary\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h3>\r\n                                        Years vs Mortgage Balance\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"panel-body\"><Chart payments={payments}/></div>\r\n                                <div className=\"panel-body\"><h4>Monthly Payment\r\n                                        <span className=\"money\">\r\n                                            {(+monthlyOverpayment + monthlyPayment).toFixed(2)}\r\n                                        </span></h4>\r\n                                </div>\r\n                 \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3 col-md-3 col-lg-3\">\r\n                    <Table  payments={payments}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","export default function calculatePayments(\r\n  initial,\r\n  years,\r\n  rate,\r\n  monthlyOverpayment,\r\n  overpayments = []\r\n) {\r\n  const monthlyRatePct = rate / 1200;\r\n  const monthlyPayment =\r\n    monthlyRatePct === 0\r\n      ? initial / years / 12\r\n      : (initial * monthlyRatePct) /\r\n        (1 - Math.pow(1 / (1 + monthlyRatePct), years * 12));\r\n  let balance = initial;\r\n  let baseline = initial;\r\n  let payments = [{ overpayment: 0, balance, baseline }];\r\n  let partial;\r\n\r\n  for (let year = 0; year < years; year++) {\r\n    let interestYearly = 0;\r\n    let overpaymentYearly = 0;\r\n    for (let month = 1; month <= 12; month++) {\r\n      const overpayment = overpayments\r\n        .filter(x => +x.year === year && +x.month === month)\r\n        .reduce((acc, val) => acc + +val.amount, 0);\r\n      let interestMonth = balance * monthlyRatePct;\r\n      interestYearly += interestMonth;\r\n      overpaymentYearly += overpayment;\r\n      balance -=\r\n        monthlyPayment + monthlyOverpayment + overpayment - interestMonth;\r\n      baseline -= monthlyPayment - baseline * monthlyRatePct;\r\n\r\n      if (balance <= 0) {\r\n        balance = 0;\r\n        if (partial === undefined && month !== 12) {\r\n          partial = month;\r\n        }\r\n      }\r\n    }\r\n\r\n    payments.push({\r\n      baseline,\r\n      interestYearly,\r\n      balance,\r\n      partial,\r\n      overpayment: overpaymentYearly + +monthlyOverpayment * (partial || 12)\r\n    });\r\n    if (partial) partial = 0;\r\n  }\r\n  return { monthlyPayment, payments };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}